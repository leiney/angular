(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{Vq9z:function(t,e,s){"use strict";s.d(e,"a",function(){return l});var i=s("mrSG"),a=s("tk/3"),r=s("fXoL");const n=s("AytR").a.apiUrl+"topics",o={headers:new a.f({"Content-Type":"application/json"})};let l=class{constructor(t){this.http=t}getAll(t){return t=t||{},this.http.get(n+"?filter="+JSON.stringify(t),o)}get(t){return this.http.get(`${n}/${t}`)}create(t){return this.http.post(n,t,o)}update(t,e){return this.http.patch(`${n}/${t}`,e,o)}submitComment(t,e,s){return this.http.patch(`${n}/submit-comment/${t}`,{participantID:e,commentText:s},o)}submitPoll(t,e,s){return this.http.patch(`${n}/submit-poll/${t}`,{participantID:e,pollStatus:s},o)}delete(t){return this.http.delete(`${n}/${t}`,o)}deleteAll(){return this.http.delete(n,o)}};l.ctorParameters=()=>[{type:a.b}],l=Object(i.c)([Object(r.Injectable)({providedIn:"root"})],l)},XhZV:function(t,e,s){"use strict";s.d(e,"a",function(){return m});var i=s("mrSG"),a=s("FQmJ"),r=s("feko"),n=s("d+0u"),o=s("/Uzn"),l=s("9+1D"),c=s("fXoL"),d=s("tk/3"),p=s("5eHb"),u=s("tyNb");let m=class{constructor(t,e,s,i,a,r,n){this.route=t,this.uploadService=e,this.companyService=s,this.tokenService=i,this.constants=a,this.functions=r,this.toastr=n,this.moduleCode="",this.parentUrl="/resources/folders",this.knowlegeUrl="/resources/knowledge-center",this.browseUrl="/resources/folders",this.parentID=null,this.objects="Resources",this.title="Upload Resource",this.errorMessage="",this.companies=[],this.companyID="",this.parents=[],this.documents=[],this.uploadService.selectedFiles}ngOnInit(){this.moduleCode=(this.route.snapshot.queryParams.moduleCode||"").trim().toLowerCase(),this.parentID=this.route.snapshot.queryParams.parentID||null,this.parentUrl="kwt"==this.moduleCode?this.knowlegeUrl:this.parentUrl,this.objects="kwt"==this.moduleCode?"Knowledge Center":this.objects,this.uploadService.selectedFiles=[],this.companyID=this.tokenService.getSelectedCompany().companyID||"",this.companyService.getUserCompanies().subscribe(t=>{this.companies=t});let t=this.constants.moduleCodes[this.moduleCode];this.parents=[{name:t.plural}],this.uploadService.getParents(this.parentID).subscribe(t=>{for(let e of t)this.parents.push(e)})}addMetaInfo(t){Object.assign(t,{value:0,error:!1,message:null,data:{moduleCode:this.moduleCode,parentID:this.parentID,resourceName:t.name,resourceSize:t.size,resourceType:"file",mimeType:t.type}})}selectFiles(t){for(let e of t.target.files)this.addMetaInfo(e),this.uploadService.selectedFiles.push(e)}removeFiles(t){t?this.uploadService.selectedFiles.splice(t,1):this.uploadService.selectedFiles=[]}uploadFiles(t,e,s,i){e=e||this.moduleCode,s=s||this.parentID,t=t||this.companyID,i=i||{},this.uploadService.progress.all=0,this.uploadService.progress.completed=0,this.uploadService.progress.failed=0;for(let a=0;a<this.uploadService.selectedFiles.length;a++){let r=this.uploadService.selectedFiles[a],n=r.data&&r.data.extraData?r.data.extraData:{};this.addMetaInfo(r),Object.assign(r.data,{moduleCode:e,parentID:s,companyID:t,extraData:Object.assign(n,i)}),this.upload(a,r)}}upload(t,e){this.uploadService.upload(e).subscribe(e=>{e.type===d.e.UploadProgress?this.uploadService.selectedFiles[t].value=Math.round(100*e.loaded/e.total):d.i,this.uploadService.selectedFiles[t].message="upload success",this.uploadService.progress.all++,this.uploadService.progress.completed++},e=>{this.uploadService.selectedFiles[t].error=!0,this.uploadService.selectedFiles[t].message="upload failure",this.uploadService.selectedFiles[t].value=0,this.uploadService.progress.all++,this.uploadService.progress.failed++})}deleteResource(t){return Object(i.b)(this,void 0,void 0,function*(){let e=yield o.a.alertDelete(n.a.Title.RECORD_OPERATION,n.a.Messages.CONFIRM_DELETE);(null==e?void 0:e.value)&&(Object.assign(t,{isDeleting:!0}),this.uploadService.delete(t.resourceID).subscribe(e=>{Object.assign(t,{isDeleting:!1}),this.documents=this.documents.filter(e=>e.resourceID!==t.resourceID),this.toastr.success(n.a.Messages.DELETE_SUCCESS,n.a.Title.RECORD_OPERATION)},e=>{Object.assign(t,{isDeleting:!1}),this.errorMessage=o.a.handleError(e,n.a.Messages.DELETE_FAILURE),this.toastr.error(this.errorMessage,n.a.Title.RECORD_OPERATION)}))})}};m.ctorParameters=()=>[{type:u.a},{type:l.a},{type:r.a},{type:a.a},{type:n.a},{type:o.a},{type:p.b}],m=Object(i.c)([Object(c.Component)({selector:"upload",template:'<app-basic-crumb [title]="title" [objects]="objects" [url]="parentUrl"\n\t[params]="{parentID:parentID, moduleCode:moduleCode}">\n</app-basic-crumb>\n<div class="row">\n\t<div class="col-sm-12">\t    \n\t    <app-card cardTitle="{{\'File Uploader\' | uppercase}}" \n\t    \tcardClass="table-card" blockClass="pl-3 pr-3 pb-0 pt-0 mb-0">\n\t    \t<div class="form-row mt-0 mb-0 pl-3">\n\t\t\t\t<div class="form-group col-md-12 form-inline pt-0">\n\t\t\t\t\t<div *ngFor="let p of parents; let i = index;">\n\t\t\t\t\t\t<a *ngIf="i==0" title="{{p.name | TitleCase}}" routerLink="{{browseUrl}}" \n\t\t\t            \t[queryParams]="{moduleCode:moduleCode}">\n\t\t\t            \t{{p.name | TitleCase}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a *ngIf="i>0" title="{{p.name | TitleCase}}" routerLink="{{browseUrl}}" \n\t\t\t            \t[queryParams]="{parentID:p.id,moduleCode:moduleCode}">\n\t\t\t            \t{{p.name | TitleCase}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<span *ngIf="i<parents.length-1">&nbsp;>>&nbsp;</span>\n\t\t\t\t\t\t<span *ngIf="i==parents.length-1">&nbsp;>>&nbsp;</span>\n\t\t\t\t\t</div>\t\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t    \t<div class="form-group col-sm-12">\n\t            <label>Owner Company*</label>\n\t            <select class="form-control" [(ngModel)]="companyID">\n\t\t\t  \t\t<option value="">No Company Selected</option>\n\t\t\t        <option *ngFor="let c of companies | OrderBy:\'fullName\'" value="{{c.companyID}}">\n\t\t\t        \t{{c.fullName}}\n\t\t\t        </option>\n\t\t\t    </select>\n\t        </div>\t\t\n\t    \t<div class="form-group col-sm-12">\n\t    \t\t<label>Select Module To Upload To</label>\n\t\t\t\t<select [(ngModel)]="moduleCode" class="form-control" [disabled]="moduleCode==\'kwt\'">\n\t\t\t\t    <option *ngFor="let m of functions.indexify(constants.moduleCodes)\n\t\t    \t\t\t| KeyFilter:\'isResourcePack\':true" value="{{m.name}}">\n\t\t\t\t    \t{{m?.plural}}\n\t\t\t\t    </option>\n\t\t\t\t    <option value="kwt" *ngIf="moduleCode==\'kwt\'">KNOWLEDGE CENTER</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t    \t\n\t    \t<div class="form-group col-sm-12" *ngIf="uploadService.selectedFiles.length==0">\n\t\t\t\t<div class="text-left text-danger" colspan="100%">\n\t\t\t\t\tNo files added to the queue! Click add button below.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t \n\t\t\t<div class="form-group col-sm-12" template #elseBlock>\n\t\t\t\t<div *ngFor="let f of uploadService.selectedFiles; let i = index;" class="mb-2">\n\t\t\t\t  <span>\n\t\t\t\t  \t<span class="{{ functions.getResourceIcon(f.data.mimeType) }} mr-2 ml-2"></span>\n\t\t\t\t  \t{{ f.data.resourceName }}\n\t\t\t\t  </span>\n\t\t\t\t  <span> &nbsp; | &nbsp; {{ functions.getResourceSize(f.data.resourceSize) }}</span>\n\t\t\t\t  &nbsp;\n\t\t\t\t  <a type="button" (click)="removeFiles(i)">\n\t\t\t\t  \t<span class="fa fa-times text-danger cursor"></span>\n\t\t\t\t  </a>\n\t\t\t\t  <span class="{{f.error? \'text-danger\' : \'text-success\'}}" *ngIf="f.message">\n\t\t\t\t  \t&nbsp; | &nbsp; {{f.message}}\n\t\t\t\t  </span>\n\t\t\t\t  <div class="progress">\n\t\t\t\t    <div class="progress-bar progress-bar-info progress-bar-striped"\n\t\t\t\t      role="progressbar" *ngIf="!(f.value==100)"\n\t\t\t\t      attr.aria-valuenow="{{ f.value }}"\n\t\t\t\t      aria-valuemin="0"\n\t\t\t\t      aria-valuemax="100"\n\t\t\t\t      [ngStyle]="{ width: f.value + \'%\' }">\n\t\t\t\t      {{ f.value }}%\n\t\t\t\t    </div>\n\t\t\t\t  </div>\t\t\t  \n\t\t\t\t</div>\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class="form-group">\n\t\t\t\t<a class="btn btn-link" routerLink="{{parentUrl}}"\n\t\t\t\t\t[queryParams]="{parentID:parentID, moduleCode:moduleCode}">Go Back</a>\t\t\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="fileInput.click()">\n\t\t\t\t\t<i class="fa fa-plus"></i> \n\t\t\t\t\tAdd Files\n\t\t\t\t</button>\n\t\t\t\t<input type="file" multiple="true" (change)="selectFiles($event)" \n\t\t\t\t  \tstyle="display: none" #fileInput/>\n\t\t\t\t&nbsp;\n\t\t\t\t<button class="btn btn-primary" *ngIf="uploadService.selectedFiles.length>0" (click)="uploadFiles()">\n\t\t\t\t\t<i class="fa fa-upload"></i>\n\t\t\t\t  \tUpload All\n\t\t\t\t</button>\t\n\t\t\t\t&nbsp;\t\t\n\t\t\t\t<button class="btn btn-danger" *ngIf="uploadService.selectedFiles.length>0" (click)="removeFiles()">\n\t\t\t\t\t<i class="fa fa-upload"></i>\n\t\t\t\t  \tRemove All\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</app-card>\n\t</div>\n</div>',styles:[""]})],m)},sTQN:function(t,e,s){"use strict";s.r(e),s.d(e,"DiscussionsModule",function(){return R});var i=s("mrSG"),a=s("ebz3"),r=s("fXoL"),n=s("ofXK"),o=s("feko"),l=s("Vq9z"),c=s("FQmJ"),d=s("/Uzn"),p=s("d+0u"),u=s("9+1D"),m=s("XhZV"),h=s("tyNb"),g=s("SxV6"),v=s("5eHb");let b=class extends m.a{constructor(t,e,s,i,a,r,n,o,l){super(o,r,s,e,a,i,l),this.dataService=t,this.tokenService=e,this.companyService=s,this.functions=i,this.constants=a,this.resourceService=r,this.router=n,this.route=o,this.toastr=l,this.isDialog=!1,this.pk="topicID",this.title="Topic Details",this.object="Topic Detail",this.objects="Topics",this.parentUrl="/discussions/forums",this.openUrl="/resources/open/",this.loading=!1,this.submitted=!1,this.errorMessage="",this.me={},this.participants={}}ngOnChanges(t){t.id.currentValue&&(this.id=t.id.currentValue,this.loadDetails())}ngOnInit(){this.id=this.route.snapshot.params.id||this.id,this.me=this.tokenService.getUser(),this.loadDetails()}loadDetails(){this.dataService.get(this.id).pipe(Object(g.a)()).subscribe(t=>{this.participants=this.functions.objectify(t.participants,"id"),this.title=t.topicTitle,this.data=t},t=>{this.isDialog||(this.errorMessage=d.a.handleError(t,p.a.Messages.RECORDS_NOT_FOUND),this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION),this.router.navigate([this.parentUrl]))}),this.resourceService.getAll({where:{"extraData.topicID":this.id||null}}).subscribe(t=>{this.documents=t},t=>{this.documents=[]})}submitPoll(t){return Object(i.b)(this,void 0,void 0,function*(){let e=yield d.a.alertDelete(p.a.Title.POLLING,p.a.Messages.POLL_CONFIRM);(null==e?void 0:e.value)&&(this.loading=!0,this.dataService.submitPoll(this.id,this.tokenService.getId(),t).pipe(Object(g.a)()).subscribe(()=>{this.loadDetails(),this.toastr.success(p.a.Messages.POLL_SUCCESS,p.a.Title.POLLING),this.isDialog||this.router.navigate([this.parentUrl])},t=>{this.errorMessage=d.a.handleError(t,p.a.Messages.POLL_FAILURE),this.toastr.error(this.errorMessage,p.a.Title.POLLING)}).add(()=>{this.loading=!1}))})}submitComment(){return Object(i.b)(this,void 0,void 0,function*(){if(!this.commentText||!this.canPoll())return;let t=yield d.a.alertDelete(p.a.Title.RECORD_OPERATION,p.a.Messages.CONFIRM_SUBMIT);(null==t?void 0:t.value)&&(this.loading=!0,this.dataService.submitComment(this.id,this.tokenService.getId(),this.commentText).pipe(Object(g.a)()).subscribe(t=>{this.loadDetails(),this.commentText=null,this.toastr.success(p.a.Messages.SAVE_SUCCESS,p.a.Title.RECORD_OPERATION)},t=>{this.errorMessage=d.a.handleError(t,p.a.Messages.SAVE_FAILURE),this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION)}).add(()=>{this.loading=!1}))})}canComment(){return(this.data?this.data.participants.filter(t=>t.id===this.tokenService.getId()):[]).length>0}canPoll(){let t=this.data?this.data.participants.filter(t=>t.id===this.tokenService.getId()):[],e=t.length>0?t[0].pollStatus:"pending";return t.length>0&&-1==["upvoted","downvoted"].indexOf(e)}countVotes(t,e){return(this.data?this.data.participants.filter(e=>e.pollStatus===t):[]).length}voted(t){let e=this.tokenService.getId();return(this.data?this.data.participants.filter(s=>s.pollStatus!=t&&s.id===e):[]).length>0}};b.ctorParameters=()=>[{type:l.a},{type:c.a},{type:o.a},{type:d.a},{type:p.a},{type:u.a},{type:h.f},{type:h.a},{type:v.b}],b.propDecorators={isDialog:[{type:r.Input}],id:[{type:r.Input}]},b=Object(i.c)([Object(r.Component)({selector:"topic-details",template:'<app-basic-crumb *ngIf="!isDialog" [title]="title" [objects]="objects" [url]="parentUrl"></app-basic-crumb>\n<div class="row">\n  <div class="col-md-6 col-sm-12">\n\t <app-card [hidHeader]="true" cardClass="mb-0">\n\t \t<perfect-scrollbar class="p-0" [style.max-height]="\'300px\'" [style.height]="\'300px\'">\n\t        <h6>{{data?.topicTitle || \'Topic Title\'}}</h6>\n\t        <p class="text-muted mb-0">{{data?.description || \'Topic description goes here..\'}}</p>\n\t        <br/>\n\t        <h6>Participants</h6>\n\t        <div class="media mb-1" *ngFor="let p of data?.participants; let i=index;">\n\t          <div class="media-body">\n\t            <p class="mb-0 mt-1 text-muted">{{p.fullName}}</p>\n\t          </div>\n\t        </div>\n\t       </perfect-scrollbar>\n\t     </app-card>\n\t     <app-card [hidHeader]="true" cardClass="mb-0" blockClass="border-top border-bottom">\n\t       <ul class="list-inline m-0">\n\t         <li class="list-inline-item">\n\t         \t<a href="javascript:" class="{{voted(\'upvoted\') || !canPoll()? \'text-muted text-h-danger\' : \'text-primary\'}}" \n\t         \t\t(click)="canPoll() && submitPoll(\'upvoted\')">\n\t         \t\t{{countVotes(\'upvoted\')}}\n\t         \t\t<i class="feather icon-thumbs-up mr-2"></i>Upvoted\n\t         \t</a>\n\t         \t&nbsp;\n\t         </li>\n\t         <li class="list-inline-item">\n\t         \t<a href="javascript:" class="{{voted(\'downvoted\') || !canPoll()? \'text-muted text-h-danger\' : \'text-primary\'}}" \n\t         \t\t(click)="canPoll() && submitPoll(\'downvoted\')">\n\t         \t\t{{countVotes(\'downvoted\')}} \n\t         \t\t<i class="feather icon-thumbs-down mr-2"></i>Downvoted\n\t         \t</a>\n\t         \t&nbsp;\n\t         </li>\n\t       </ul>\n\t     </app-card>\n  </div>\n  <div class="col-md-6 col-sm-12">\n  \t<app-card [hidHeader]="true">  \t\t\n\t     <div class="row justify-content-between mb-4">\n\t       <div class="col-auto">\n\t       \t<a href="javascript:" class="text-muted text-h-primary">\n\t       \t\tComment ({{data?.comments.length}})\n\t       \t</a>\n\t       </div>\n\t       <div class="col-auto"><a href="javascript:" class="text-muted text-h-primary">See All</a></div>\n\t     </div>\n\t     <perfect-scrollbar [style.max-height]="\'270px\'" [style.height]="\'270px\'">\n\t\t      <div *ngFor="let c of data?.comments">\n\t\t       <div class="media mb-0">\n\t\t         <img src="{{participants[c.participantID]?.icon || \'assets/images/user/default-user.png\'}}" alt="user image" \n\t\t         \tclass="img-radius wid-30 align-top m-r-15">\n\t\t         <div class="media-body">\n\t\t           <h6 class="mb-0 text-h-primary">{{participants[c.participantID]?.fullName || \'Leiney Ogeto\' }}</h6>\n\t\t           <p class="m-b-0">{{c.commentText}}\n\t\t             <a href="javascript:" class="text-muted text-h-danger ml-1"><small>Like</small></a>\n\t\t             <a href="javascript:" class="text-muted text-h-primary ml-1"><small>Comment</small></a>\n\t\t           </p>\n\t\t         </div>\n\t\t       </div>\n\t\t       <hr>\n\t\t      </div>\n\t     </perfect-scrollbar>\n\t     <div class="media mb-0">\n\t       <img src="{{me?.icon || \'assets/images/user/default-user.png\'}}" alt="user image" \n\t       \tclass="img-radius wid-40 align-top m-r-15">\n\t       <div class="media-body">\n\t         <div class="input-group mb-3">\n\t           <input type="text" class="form-control form-control border-0 shadow-none px-0" \n\t           \tplaceholder="Write comment here !. . ." [(ngModel)]="commentText">\n\t           <div class="input-group-append">\n\t             <button class="btn  btn-primary" type="button" (click)="submitComment()" [disabled]="!canComment()">\n\t             \t<i class="feather icon-message-circle"></i>\n\t             </button>\n\t           </div>\n\t         </div>\n\t       </div>\n\t     </div>\n\t</app-card>      \n  </div>\n</div>',styles:[""]})],b);var f=s("evKo"),y=s("VITL"),D=s("3Pt+");let O=class extends m.a{constructor(t,e,s,i,a,r,n,o,l,c,d,p){super(e,a,n,o,d,p,c),this.formBuilder=t,this.route=e,this.router=s,this.dataService=i,this.uploadService=a,this.userService=r,this.companyService=n,this.tokenService=o,this.orderBy=l,this.toastr=c,this.constants=d,this.functions=p,this.pk="topicID",this.title="",this.objects="Discussions",this.object="Topic",this.loading=!1,this.errorMessage="",this.submitted=!1,this.autocompleteArray=[],this.autocompleteField="name",this.autocompleteModel=null,this.data={},this.companies=[],this.parentUrl="/discussions/forums"}ngOnInit(){this.id=this.route.snapshot.params.id,this.isAddMode=!this.id,this.title=(this.isAddMode?"Create":"Edit")+" "+this.object;let t=new Date(Date.now());this.form=this.formBuilder.group({companyID:[this.tokenService.getSelectedCompany().companyID||""],topicTitle:["",D.j.required],description:[""],dueDate:[null,D.j.required],submittedOn:[t,D.j.required],participants:this.formBuilder.array([]),documents:this.formBuilder.array([]),comments:this.formBuilder.array([]),pollingAllowed:["Y"],sendSms:["N"],sendEmail:["Y"],topicStatus:["open"]}),this.uploadService.selectedFiles=[],this.userService.getAll().subscribe(t=>{for(let e of t){let t=e.fullName+" - "+e.phoneNo;this.autocompleteArray.push(Object.assign(e,{id:e.id,name:t}))}}),this.isAddMode||this.dataService.get(this.id).pipe(Object(g.a)()).subscribe(e=>{this.data=e,this.form.patchValue(e),this.form.patchValue({dueDate:e.dueDate?new Date(e.dueDate):null}),this.form.patchValue({submittedOn:e.submittedOn?new Date(e.submittedOn):t}),this.populateMany(),this.toastr.success(p.a.Messages.RECORD_LOADED,p.a.Title.RECORD_OPERATION)},t=>{this.errorMessage=t.message?t.message:p.a.Messages.RECORDS_NOT_FOUND,this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION),this.router.navigate([this.parentUrl],{relativeTo:this.route})}),this.companyService.getUserCompanies().subscribe(t=>{this.companies=t})}onSubmit(){return Object(i.b)(this,void 0,void 0,function*(){if(this.submitted=!0,this.form.invalid)return void this.toastr.error(p.a.Messages.FORM_ERROR_FOUND,p.a.Title.FORM_VALIDATION);let t=yield d.a.alertDelete(p.a.Title.RECORD_OPERATION,p.a.Messages.CONFIRM_SUBMIT);(null==t?void 0:t.value)&&(this.loading=!0,this.isAddMode?this.createRecord(this.form.value):this.updateRecord(this.form.value))})}createRecord(t){this.dataService.create(t).pipe(Object(g.a)()).subscribe(t=>{this.toastr.success(p.a.Messages.SAVE_SUCCESS,p.a.Title.RECORD_OPERATION),this.uploadFilesAndFolders(t.topicID,t)},t=>{this.errorMessage=d.a.handleError(t,p.a.Messages.SAVE_FAILURE),this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION)}).add(()=>{this.loading=!1})}updateRecord(t){this.dataService.update(this.id,t).pipe(Object(g.a)()).subscribe(()=>{this.toastr.success(p.a.Messages.UPDATE_SUCCESS,p.a.Title.RECORD_OPERATION),this.uploadFilesAndFolders(this.id,t)},t=>{this.errorMessage=t.message?t.message:p.a.Messages.UPDATE_FAILURE,this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION)}).add(()=>{this.loading=!1})}uploadFilesAndFolders(t,e){let s={moduleCode:this.constants.moduleCodes.dis.name,year:(new Date).getFullYear(),resourceName:e.topicTitle,companyID:this.form.get("companyID").value};this.uploadService.getYearDirectory(s.moduleCode,s.year,s.resourceName,s.companyID).subscribe(e=>{this.uploadFiles(e.moduleCode,e.resourceID,{topicID:t}),this.router.navigate([this.parentUrl])})}onUserChange(t){let e=this.data.participants||[],s={id:t.id,fullName:t.fullName,phoneNo:t.phoneNo,email:t.email,pollStatus:t.pollStatus||"pending"};0==e.filter(t=>t.id===s.id).length&&e.push(s),this.data.participants=e,this.populateMany(),this.autocomplete.clear(),this.autocomplete.focus()}populateMany(){let t=this.form.get("participants").length,e=this.data.participants.length,s=e>t?e-t:0,i=t>e?t-e:0;for(let r=0;r<s;r++)this.addRow();for(let r=0;r<i;r++)this.deleteRow(r);let a=this.orderBy.transform(this.data.participants,["fullName"]);this.form.patchValue({participants:a})}get f(){return this.form.controls}addRow(){this.form.get("participants").push(this.formBuilder.group({id:[""],fullName:["",D.j.required],phoneNo:[""],email:[""],pollStatus:["pending"],isEditable:[!0]}))}deleteRow(t){this.form.get("participants").removeAt(t)}get c(){return this.form.get("participants")}};O.ctorParameters=()=>[{type:D.b},{type:h.a},{type:h.f},{type:l.a},{type:u.a},{type:y.a},{type:o.a},{type:c.a},{type:f.a},{type:v.b},{type:p.a},{type:d.a}],O.propDecorators={autocomplete:[{type:r.ViewChild,args:["autocomplete"]}]},O=Object(i.c)([Object(r.Component)({selector:"app-create-topic",template:'<app-basic-crumb [title]="title" [objects]="objects" [url]="parentUrl"></app-basic-crumb>\n<div class="row">\n\t<div class="col-sm-12">\n\t    <app-card hidHeader="true" blockClass="table-border-style">\n\t\t\t<form [formGroup]="form" (ngSubmit)="onSubmit()">\t\t\t\t\n\t\t\t    <div class="pb-4">\n\t\t\t        <strong>Enter topic details below</strong>\n\t\t\t    </div>\n\t\t\t    <div class="form-row">\n\t\t\t        <div class="form-group col-sm-9">\n\t\t\t            <label>Enter Topic Title*</label>\n\t\t\t            <input type="text" formControlName="topicTitle"  placeholder="Enter topic name"\n\t\t\t            \tclass="form-control" [ngClass]="{ \'is-invalid\': submitted && f.topicTitle.errors }"/>\n\t\t\t            <div *ngIf="submitted && f.topicTitle.errors" class="invalid-feedback">\n\t\t\t                <div *ngIf="f.topicTitle.errors.required">Topic title is required</div>\n\t\t\t            </div>\n\t\t\t        </div>\t        \n\t\t\t        <div class="form-group col-md-3">\n\t\t\t            <label for="dueDate">Due Date:</label>\n\t\t\t            <input type="text" class="form-control" formControlName="dueDate" placeholder="dd-mmm-yyyy"\n\t\t\t            \t[ngClass]="{ \'is-invalid\': submitted && f.dueDate.errors }"\n\t\t\t            \t#datepickerYMD="bsDatepicker" bsDatepicker placement="top" [bsConfig]="{ dateInputFormat: \'DD-MMM-YYYY\' }">\n\t\t\t            <div *ngIf="submitted && f.dueDate.errors" class="invalid-feedback">\n\t\t\t\t\t        <div *ngIf="f.dueDate.errors.required">Due date is required</div>\n\t\t\t\t\t    </div>\n\t\t\t        </div>\t\n\t\t\t        <div class="form-group col-sm-12">\n\t\t\t            <label>Descriptive Details*</label>\n\t\t\t            <textarea rows="3" formControlName="description"  placeholder="Enter topic description"\n\t\t\t            \tclass="form-control" [ngClass]="{ \'is-invalid\': submitted && f.description.errors }">\n\t\t\t            </textarea>\n\t\t\t            <div *ngIf="submitted && f.description.errors" class="invalid-feedback">\n\t\t\t                <div *ngIf="f.description.errors.required">Description is required</div>\n\t\t\t            </div>\n\t\t\t        </div>\t\n\t\t\t\t</div>\n\t\t\t\t<div class="form-row">\n\t\t        \t<div class="form-group col-sm-12 mb-0">\n\t\t\t          <div class="checkbox checkbox-primary d-inline">\n\t\t\t              <input type="checkbox" name="pollingAllowed" id="pollingAllowed" \n\t\t\t              \ttrueFalseValue trueValue="Y" falseValue="N" formControlName="pollingAllowed">\n\t\t\t              <label for="pollingAllowed" class="cr">\n\t\t\t              \t\tIs polling allowed in this topic?\n\t\t\t              </label>\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t    </div>\t\t\t    \n\t\t\t\t<div class="pb-4 pt-5">\n\t\t\t        <strong>Select topic participants below</strong>\n\t\t\t    </div>\n\t\t\t\t<div class="form-row">\n\t\t\t\t\t<div class="form-group col-md-12">\n\t\t\t\t\t\t<ng-autocomplete \n\t\t\t\t\t\t  #autocomplete\n\t\t\t\t\t\t  [data]="autocompleteArray"\n\t\t\t\t\t\t  placeholder="Search participants by their names"\n\t\t\t\t\t\t  [searchKeyword]="autocompleteField"\n\t\t\t\t\t\t  (selected)=\'onUserChange($event)\'\n\t\t\t\t\t\t  [ngModel] = \'autocompleteModel\'\n\t\t\t\t\t\t  [ngModelOptions]=\'{standalone: true}\'\n\t\t\t\t\t\t  [itemTemplate]="itemTemplate"\n\t\t\t\t\t\t  [notFoundTemplate]="notFoundTemplate">                                 \n\t\t\t\t\t\t</ng-autocomplete>\t\t\t\t\t\t\n\t\t\t\t\t\t<ng-template #itemTemplate let-item>\n\t\t\t\t\t\t\t<a [innerHTML]="item.name"></a>\n\t\t\t\t\t\t</ng-template>\t\t\t\t\t\t\n\t\t\t\t\t\t<ng-template #notFoundTemplate let-notFound>\n\t\t\t\t\t\t\t<div [innerHTML]="notFound"></div>\n\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="table-responsive">\t\t\n\t\t\t        <table class="table table-borderless nopadding table-sm">\t\t\n\t\t\t\t\t\t<tr>\t\t\t\t\n\t\t\t\t\t\t\t<th>Added ({{ c.controls.length }}) participants</th>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<th class="text-right">\n\t\t\t\t                Actions\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<ng-container formArrayName="participants" *ngFor="let group of c.controls; let i=index">\n\t\t\t\t\t\t\t<tr [formGroupName]="i">\t\t\t\t\t            \n\t\t\t\t\t            <td>\n\t\t\t\t\t\t\t\t\t<div class="form-row">\n\t\t\t\t\t            \t\t<div class="form-group col-md-4">\t\t\t\t            \t\t\t\n\t\t\t\t\t\t\t                <input class="form-control font-weight-bold" type="text" formControlName="fullName"\n\t\t\t\t\t\t\t                \t[ngClass]="{ \'is-invalid\': submitted && group.controls.fullName.errors }">\n\t\t\t\t\t\t\t\t            <div *ngIf="submitted && group.controls.fullName.errors" class="invalid-feedback">\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.fullName.errors.required">Full name is required</div>\n\t\t\t\t\t\t\t\t            </div>  \n\t\t\t\t\t            \t\t</div>\n\t\t\t\t\t            \t\t<div class="form-group col-md-4">\n\t\t\t\t\t            \t\t\t<input class="form-control" placeholder="e.g. +254 000 000 000" formControlName="phoneNo"\n\t\t\t\t\t\t\t\t\t\t\t\ttype="text" [ngClass]="{\'is-invalid\': submitted && group.controls.phoneNo.errors}"\n\t\t\t\t\t\t\t\t\t\t\t\tmask="(+000) 000-000000">\n\t\t\t\t\t\t\t\t            <div *ngIf="submitted && group.controls.phoneNo.errors" class="invalid-feedback">\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.phoneNo.errors.required">Phone number is required</div>\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.phoneNo.errors.minlength">Must be equal to 12 character(s)</div>\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.phoneNo.errors.maxlength">Must be equal to 12 character(s)</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="group.controls.phoneNo.errors.pattern">Incorrect! use format e.g. (+000) 000-000000</div>\n\t\t\t\t\t\t\t\t            </div>\n\t\t\t\t\t            \t\t</div>\t\t\t\t            \t\t\n\t\t\t\t\t            \t\t<div class="form-group col-md-4">\n\t\t\t\t\t            \t\t\t<input type="text" formControlName="email" class="form-control" \n\t\t\t\t\t\t\t\t            \t[ngClass]="{ \'is-invalid\': submitted && group.controls.email.errors }"/>\n\t\t\t\t\t\t\t\t            <div *ngIf="submitted && group.controls.email.errors" class="invalid-feedback">\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.email.errors.required">Email is required</div>\n\t\t\t\t\t\t\t\t                <div *ngIf="group.controls.email.errors.email">Email must be a valid email address</div>\n\t\t\t\t\t\t\t\t            </div>\n\t\t\t\t\t            \t\t</div>\n\t\t\t\t\t            \t</div>      \n\t\t\t\t\t            </td>\t\t\t\t\t\t            \t\n\t\t\t\t\t            <td class="text-right pt-4">\n\t\t\t\t\t         \t\t<a href="javascript:" (click)="deleteRow(i)">\n\t\t\t\t\t                \t<i class="feather icon-trash-2 f-16 ml-3 text-c-red"></i>\n\t\t\t\t\t                \tDelete\n\t\t\t\t\t                </a>\n\t\t\t\t\t            </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</ng-container>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\t\t\t\t\n\t\t\t    <div class="form-group pt-4">\n\t\t\t\t\t<button type="button" [disabled]="loading" (click)="onSubmit()" class="btn btn-primary">\n\t\t\t\t\t\t<span *ngIf="loading" class="spinner-border spinner-border-sm mr-1"></span>\n\t\t\t\t\t\tSave Topic\n\t\t\t\t\t</button>\n\t\t\t        <a routerLink="{{parentUrl}}" class="btn btn-link">Cancel</a>\n\t\t\t    </div>\n\t\t\t</form>\n\t\t</app-card>\n\t</div>\n</div>',styles:[""]})],O);var I=s("gG2O");let S=class{constructor(t,e,s,i,a,r){this.route=t,this.dataService=e,this.functions=s,this.constants=i,this.tokenService=a,this.toastr=r,this.pk="topicID",this.title="Discussions",this.object="Topic",this.editUrl="discussions/edit/",this.detailsUrl="discussions/details/",this.addUrl="discussions/create",this.errorMessage=null,this.filter={term:null},this.status={},this.status=this.constants.topicStatus}ngOnInit(){this.loadRecords()}loadRecords(t){let e=t?{topicTitle:{like:t.trim(),options:"i"}}:{};this.dataService.getAll(e).subscribe(t=>{this.rows=t},t=>{this.errorMessage=d.a.handleError(t,p.a.Messages.RECORDS_NOT_FOUND),this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION)})}deleteRow(t){return Object(i.b)(this,void 0,void 0,function*(){let e=yield d.a.alertDelete(p.a.Title.RECORD_OPERATION,p.a.Messages.CONFIRM_DELETE);(null==e?void 0:e.value)&&(Object.assign(t,{isDeleting:!0}),this.dataService.delete(t[this.pk]).subscribe(e=>{Object.assign(t,{isDeleting:!1}),this.rows=this.rows.filter(e=>e[this.pk]!==t[this.pk]),this.toastr.success(p.a.Messages.DELETE_SUCCESS,p.a.Title.RECORD_OPERATION)},e=>{Object.assign(t,{isDeleting:!1}),this.errorMessage=d.a.handleError(e,p.a.Messages.DELETE_FAILURE),this.toastr.error(this.errorMessage,p.a.Title.RECORD_OPERATION)}))})}getVotes(t,e){t=t||[];let s=this.functions.countInArray(t,{topicStatus:e});return s?s+"/"+t.length:"-"}};S.ctorParameters=()=>[{type:h.a},{type:l.a},{type:d.a},{type:p.a},{type:c.a},{type:v.b}],S=Object(i.c)([Object(r.Component)({selector:"discussions",template:'<div class="row">\n\t<div class="col-sm-12">\n\t     <app-card hidHeader="true" cardClass="table-card" blockClass="p-0">\n\t     \t<div class="form-row p-3">\n\t          <div class="form-group col-sm-12 mb-0\n\t          \t{{(tokenService.getUserType()==constants.userTypes.admin.name)? \'col-md-9\' : \'col-md-12\'}}">\n\t            <input class="form-control" placeholder="Search {{title}} Topics Here.." [(ngModel)]="filter.term"\n\t\t\t\t\t(keyup)="($event.keyCode == 13 ? loadRecords(filter.term) : null)"/>\n\t          </div>\n\t          <div class="form-group col-md-3 col-sm-12 text-right"\n\t          \t*ngIf="(tokenService.getUserType()==constants.userTypes.admin.name)">\n\t            <div class="text-right">\n\t              <a title="Add {{object}}" class="btn btn-primary" routerLink="/{{addUrl}}">\n\t\t\t\t\t\t<i class="feather icon-plus"></i> Create Topic\n\t\t\t\t\t</a>\n\t            </div>\n\t          </div>\n\t        </div>\n\t        <table class="table nowhitespace">             \t\n\t\t\t  <tr *ngIf="!rows || rows.length==0">\n\t\t\t\t<td class="text-center" colspan="100%">\n\t\t\t\t\t{{\n\t\t\t\t\t\terrorMessage? errorMessage :\n\t\t\t\t\t\t(\'Search could not find any \'+ title.toLowerCase() + \' records\')\n\t\t\t\t\t}}\n\t\t\t\t</td>\n\t\t\t  </tr>\n\t          <tr template #elseBlock *ngFor="let row of rows | OrderBy:[\'-submittedOn\'] ; let i=index">           \n\t            <td class="word-ellipsize" colspan="100%">\n\t            \t<div class="media mb-0">\n\t\t              <div class="media-body">\n\t\t                <h6 class="mb-0 text-primary">{{row.topicTitle}}</h6>\n\t\t                <p class="m-b-0">\n\t\t                \t{{row.description}}<br/>\t\t\n\t\t                  \t<span class="text-muted text-h-danger">\n\t\t                  \t\tCreated On: {{(row?.submittedOn | date:\'dd-MMM-yyyy\') || \'--/--/----\'}}\n\t\t                  \t</span> \n\t\t                  \t&nbsp; |\n\t\t                  \t<span class="text-muted text-h-danger ml-1">\n\t\t                  \t\tParticipants: {{row?.participants?.length || \'0\'}}\n\t\t                  \t</span> \n\t\t                  \t<br/>\t\t                  \t\n\t\t                  \t<a  *ngIf="row.topicStatus!=\'pending\' ||\n\t\t\t\t\t\t\t\ttokenService.getUserType()!=constants.userTypes.admin.name" title="View {{object}}" \n\t\t\t            \t\tclass="text-primary text-muted text-h-danger ml-1" routerLink="/{{detailsUrl + row[pk]}}">\n\t\t\t\t\t\t\t\t<i class="feather icon-eye"></i> Open\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a  *ngIf="tokenService.getUserType()==constants.userTypes.admin.name"\n\t\t\t\t\t\t\t\ttitle="Edit {{object}}" class="text-primary text-muted text-h-danger ml-1" routerLink="/{{editUrl + row[pk]}}">\n\t\t\t\t\t\t\t\t<i class="feather icon-edit"></i> Edit\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<a \n\t\t\t\t\t\t\t\t*ngIf="tokenService.getUserType()==constants.userTypes.admin.name"\n\t\t\t\t\t\t\t\tclass="text-danger text-muted text-h-danger ml-1" [disabled]="row?.isDeleting" type="button" \n\t\t\t\t\t\t\t\ttitle="Delete {{object}}" (click)="deleteRow(row)">\n\t\t\t\t\t\t\t\t<span *ngIf="row?.isDeleting" class="spinner-border spinner-border-sm"></span>\n\t\t\t\t\t\t\t\t<span *ngIf="!row?.isDeleting"><i class="feather icon-trash"></i></span>\n\t\t\t\t\t\t\t\tArchive\n\t\t\t\t\t\t\t</a>\t\t                  \t\n\t\t                </p>\n\t\t              </div>\n\t\t            </div>\n\t            </td>\n\t          </tr>\n\t  \t\t</table>\n\t  </app-card>\n\t</div>\n</div>',styles:[""]})],S);const C=[{path:"",redirectTo:"forums",pathMatch:"full"},{path:"forums",component:S,canActivate:[I.a]},{path:"create",component:O,canActivate:[I.a]},{path:"edit/:id",component:O,canActivate:[I.a]},{path:"details/:id",component:b,canActivate:[I.a]}];let T=class{};T=Object(i.c)([Object(r.NgModule)({imports:[h.g.forChild(C)],exports:[h.g]})],T);let R=class{};R=Object(i.c)([Object(r.NgModule)({declarations:[S,O,b],imports:[n.CommonModule,T,a.a],exports:[b]})],R)}}]);