(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"Gw/Z":function(t,e,s){"use strict";s.r(e),s.d(e,"MessagesModule",function(){return k});var a=s("mrSG"),i=s("ebz3"),n=s("fXoL"),l=s("ofXK"),o=s("FQmJ"),r=s("d+0u"),c=s("/Uzn"),d=s("Qaiu"),m=s("5eHb"),p=s("tyNb");let g=class{constructor(t,e,s,a,i,n){this.route=t,this.dataService=e,this.functions=s,this.constants=a,this.tokenService=i,this.toastr=n,this.pk="notificationID",this.title="Messages",this.objects="Dashboard",this.object="Messages",this.parentUrl="dashboard",this.errorMessage=null,this.filter={term:null},this.inboxCount=0,this.messageFolderType="IB",this.messageType="email",this.isCollapsed=!1,this.isMail="inbox",this.messageType="email"}ngOnInit(){this.route.queryParams.subscribe(t=>{this.messageFolderType=t.messageFolderType;this.messageFolderType&&this.messageFolderType;this.dataService.getAll({where:{}}).subscribe(t=>{this.rows=t},t=>{this.errorMessage=c.a.handleError(t,r.a.Messages.RECORDS_NOT_FOUND),this.toastr.error(this.errorMessage,r.a.Title.RECORD_OPERATION)})}),this.dataService.count({messageFolderType:this.messageFolderType}).subscribe(t=>{this.inboxCount=t.count})}deleteRow(t){return Object(a.b)(this,void 0,void 0,function*(){let e=yield c.a.alertDelete(r.a.Title.RECORD_OPERATION,r.a.Messages.CONFIRM_DELETE);(null==e?void 0:e.value)&&(Object.assign(t,{isDeleting:!0}),this.dataService.delete(t[this.pk]).subscribe(e=>{Object.assign(t,{isDeleting:!1}),this.rows=this.rows.filter(e=>e[this.pk]!==t[this.pk]),this.toastr.success(r.a.Messages.DELETE_SUCCESS,r.a.Title.RECORD_OPERATION)},e=>{Object.assign(t,{isDeleting:!1}),this.errorMessage=c.a.handleError(e,r.a.Messages.DELETE_FAILURE),this.toastr.error(this.errorMessage,r.a.Title.RECORD_OPERATION)}))})}};g.ctorParameters=()=>[{type:p.a},{type:d.a},{type:c.a},{type:r.a},{type:o.a},{type:m.b}],g=Object(a.c)([Object(n.Component)({selector:"messages",template:'<app-basic-crumb [title]="title" [objects]="objects" [url]="parentUrl"></app-basic-crumb>\n<div class="row">\n  <div class="col-sm-12">\n    <div class="card email-card">      \n\t  <div class="card-body">\n        <div class="mail-body">\n          <div class="row">\n            \x3c!-- [ inbox-left section ] start --\x3e\n            <div class="col-xl-2 col-md-3">\n              <div class="mb-3">\n                <a [routerLink]="[\'/messages/compose\']" class="btn waves-effect waves-light btn-rounded btn-outline-primary">+ Compose</a>\n              </div>\n              <ul class="mb-2 nav nav-tab flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">\n                <li class="nav-item mail-section" *ngFor="let b of constants.messageFolderType">\n                  <a class="nav-link text-left" [routerLink]="[\'/messages/inbox\']" \n                  \t[ngClass]="{\'active\':(b.value==messageFolderType)}" \n                  \t[queryParams]="{messageFolderType:b.value}">\n                    <span><i class="{{b.icon}}"></i>{{b.name}}</span>\n                    <span class="float-right" *ngIf="b.value==\'IB\'">\n                    \t{{inboxCount}}\n                    </span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            \x3c!-- [ inbox-left section ] end --\x3e\n            \x3c!-- [ inbox-right section ] start --\x3e\n            <div class="col-xl-10 col-md-9 inbox-right">\n              <div class="email-btn">\n                <button type="button" class="btn waves-effect waves-light btn-icon btn-rounded btn-outline-secondary mb-2"><i class="feather icon-alert-circle"></i></button>\n                <button type="button" class="btn waves-effect waves-light btn-icon btn-rounded btn-outline-secondary mb-2"><i class="feather icon-inbox"></i></button>\n                <button type="button" class="btn waves-effect waves-light btn-icon btn-rounded btn-outline-secondary mb-2"><i class="feather icon-trash-2"></i></button>                \n              </div>\n              <div class="tab-content p-0" id="v-pills-tabContent">\n                <div class="tab-pane fade" [ngClass]="{\'show active\': isMail === \'inbox\'}" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">\n                  <ul class="nav nav-pills nav-fill mb-0" id="pills-tab" role="tablist">\n                    <li class="nav-item">\n                      <a class="nav-link" [ngClass]="{\'active\': messageType === \'email\'}" (click)="messageType = \'email\'" id="pills-primary-tab" data-toggle="pill" href="javascript:" role="tab" aria-controls="pills-primary" aria-selected="true">\n                        <span><i class="feather icon-mail"></i>Email Messages</span>\n                      </a>\n                    </li>\n                    <li class="nav-item">\n                      <a class="nav-link" [ngClass]="{\'active\': messageType === \'sms\'}" (click)="messageType = \'sms\'" id="pills-social-tab" data-toggle="pill" href="javascript:" role="tab" aria-controls="pills-social" aria-selected="false">\n                        <span><i class="feather icon-phone"></i>Sms Messages</span>\n                      </a>\n                    </li>\n                    <li class="nav-item">\n                      <a class="nav-link" [ngClass]="{\'active\': messageType === \'push\'}" (click)="messageType = \'push\'" id="pills-Promotion-tab" data-toggle="pill" href="javascript:" role="tab" aria-controls="pills-Promotion" aria-selected="false">\n                        <span><i class="feather icon-bell"></i>Notifications</span>\n                      </a>\n                    </li>\n                  </ul>\n                  <div class="tab-content" id="pills-tabContent">\n                    <div class="tab-pane fade show active" id="pills-primary" role="tabpanel" aria-labelledby="pills-primary-tab">\n                      <div class="mail-body-content table-responsive">\n                        <table class="table">\n                          <tbody>                          \t                \t\n\t\t\t\t\t\t\t  <tr *ngIf="!rows || rows.length==0">\n\t\t\t\t\t\t\t\t<td class="text-center" colspan="100%">\n\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\terrorMessage? errorMessage :\n\t\t\t\t\t\t\t\t\t\t(\'Search could not find any \'+ title.toLowerCase() + \' records\')\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t  </tr>\n\t                          <tr [ngClass]="{\'unread\':row.isRead==\'N\'}" template #elseBlock \n\t                          \t*ngFor="let row of rows | KeyFilter:\'messageType\':messageType | OrderBy:[\'-dueDate\'] ; let i=index">\n\t                            <td>\n\t                              <div class="check-star">\n\t                                <div class="form-group d-inline">\n\t                                  <div class="checkbox checkbox-primary checkbox-fill d-inline">\n\t                                    <input type="checkbox" name="checkbox-s-in-1" id="checkbox-s-infill-1">\n\t                                    <label for="checkbox-s-infill-1" class="cr"></label>\n\t                                  </div>\n\t                                </div>\n\t                                <a href="javascript:"><i class="feather icon-star ml-2"></i></a>\n\t                              </div>\n\t                            </td>\n\t                            <td>\n\t                            \t<a [routerLink]="[\'/messages/read/\' + row[pk]]" class="email-name waves-effect">\n\t                            \t\t{{row?.owner?.fullName || \'Administrator\'}}\n\t                            \t</a>\n\t                            </td>\n\t                            <td>\n\t                            \t<a [routerLink]="[\'/messages/read/\' + row[pk]]" class="email-name waves-effect">\n\t                            \t\t{{row?.messageTitle || row?.messageBody}}\n\t                            \t</a>\n\t                            </td>\n\t                            <td class="email-time">\n\t                            \t{{functions.timeAgo(row.notificationDate)}}\n\t                            </td>\n\t                          </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- [ inbox-right section ] end --\x3e\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n',styles:[".mail-messages{\r\n\twidth: 100% important;\r\n}\r\n.mail-messages td, .mail-messages.table th{\r\n\twhite-space: initial !important;\r\n}\r\n.mail-messages td.email-time{\r\n\tmin-width: 180px !important;\r\n}\r\n.mail-messages td.word-ellipsize{\t\r\n\theight: 30px !important;\r\n\tmin-width: calc(100% - 20px) !important;\r\n\twidth: calc(100% - 20px) !important;\r\n\tdisplay: inline-block !important;\r\n\twhite-space: nowrap !important;\r\n\toverflow: hidden !important;\r\n\ttext-overflow: ellipsis !important;\t\r\n\t-o-text-overflow:ellipsis !important;\r\n}"]})],g);let v=class{constructor(t,e,s,a,i,n){this.route=t,this.router=e,this.dataService=s,this.constants=a,this.functions=i,this.toastr=n,this.pk="notificationID",this.title="Read Message",this.objects="Messages",this.object="Read Message",this.parentUrl="/messages/inbox",this.inboxCount=0,this.messageFolderType=null,this.isCollapsed=!1}ngOnInit(){}};v.ctorParameters=()=>[{type:p.a},{type:p.f},{type:d.a},{type:r.a},{type:c.a},{type:m.b}],v=Object(a.c)([Object(n.Component)({selector:"read-message",template:'<div class="row">\n  <div class="col-sm-12">\n    <div class="card email-card">\n      <div class="card-body">\n        <div class="mail-body">\n          <div class="row">\n            \x3c!-- [ email-left section ] start --\x3e\n            <div class="col-xl-2 col-md-3">\n              <div class="mb-3">\n                <a [routerLink]="[\'/messages/compose\']" class="btn waves-effect waves-light btn-rounded btn-outline-primary">+ Compose</a>\n              </div>\n              <ul class="mb-2 nav nav-tab flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">\n                <li class="nav-item mail-section" *ngFor="let b of constants.messageFolderType">\n                  <a class="nav-link text-left" [routerLink]="[\'/messages/inbox\']" \n                  \t[ngClass]="{\'active\':(b.value==messageFolderType)}" \n                  \t[queryParams]="{messageFolderType:b.value}">\n                    <span><i class="{{b.icon}}"></i>{{b.name}}</span>\n                    <span class="float-right" *ngIf="b.value==\'IB\'">\n                    \t{{inboxCount}}\n                    </span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            \x3c!-- [ email-left section ] end --\x3e\n            \x3c!-- [ email-right section ] start --\x3e\n            <div class="col-xl-10 col-md-9">\n              <div class="card">\n                <div class="card-header">\n                  <h6 class="d-inline-block m-0">Here You Have New Opportunity...</h6>\n                  <p class="float-right m-0"><strong>08:23 AM</strong></p>\n                </div>\n                <div class="card-body">\n                  <div class="email-read">\n                    <div class="photo-table m-r-10">\n                      <a href="javascript:">\n                        <img class="media-object img-radius" src="assets/images/user/avatar-1.jpg" alt="E-mail user" style="width:50px;">\n                      </a>\n                    </div>\n                    <div>\n                      <a href="javascript:">\n                        <p class="user-name text-dark mb-1"><strong>John Doe</strong></p>\n                      </a>\n                      <a class="user-mail txt-muted" href="javascript:">\n                        <p class="user-name text-dark mb-1"><strong>From:johndoe7869@gmail.com</strong></p>\n                      </a>\n                    </div>\n                  </div>\n                  <div class="m-b-20 m-l-50 p-l-10 email-contant">\n                    <div class="photo-contant">\n                      <div>\n                        <p class="user-name text-dark mb-1"><strong>Hello Dear...</strong></p>\n                        <div class="email-content">\n                          <p class="">\n                            Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient\n                            montes, nascetur ridiculus mus.Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis.\n                          </p>\n                          <ul>\n                            <li>Lorem ipsum dolor sit amet</li>\n                            <li>Consectetur adipiscing elit</li>\n                            <li>Facilisis in pretium nisl aliquet</li>\n                            <li>Nulla volutpat aliquam velit\n                              <ul>\n                                <li>Phasellus iaculis neque</li>\n                                <li>Purus sodales ultricies</li>\n                              </ul>\n                            </li>\n                            <li>Faucibus porta lacus fringilla vel</li>\n                            <li>Eget porttitor lorem</li>\n                          </ul>\n                          <blockquote class="blockquote">\n                            <p class="mb-2">\n                              Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient\n                              montes, nascetur ridiculus mus.\n                            </p>\n                            <footer class="blockquote-footer">Someone famous in <cite title="Source Title">Source Title</cite></footer>\n                          </blockquote>\n                        </div>\n                      </div>\n                      <div class="m-t-15">\n                        <i class="feather icon-paperclip f-20 m-r-10"></i>Attachments <b>(3)</b>\n                        <div class="row mail-img m-t-20">\n                          <div class="col-sm-4 col-md-3 col-xl-2 m-b-20">\n                            <a href="javascript:" data-toggle="lightbox" data-title="Gradient Able Image 1" data-footer="Gradient Able Image 1"><img src="assets/images/slider/img-slide-4.jpg" class="img-fluid img-thumbnail" alt=""></a>\n                          </div>\n                          <div class="col-sm-4 col-md-3 col-xl-2 m-b-20">\n                            <a href="javascript:" data-toggle="lightbox" data-title="Gradient Able Image 2" data-footer="Gradient Able Image 2"><img src="assets/images/slider/img-slide-1.jpg" class="img-fluid img-thumbnail" alt=""></a>\n                          </div>\n                          <div class="col-sm-4 col-md-3 col-xl-2 m-b-20">\n                            <a href="javascript:" data-toggle="lightbox" data-title="Gradient Able Image 3" data-footer="Gradient Able Image 3"><img src="assets/images/slider/img-slide-3.jpg" class="img-fluid img-thumbnail" alt=""></a>\n                          </div>\n                        </div>\n                        <form class="form-material">\n                          <div class="form-group">\n                            <input type="email" class="form-control" id="exampleInputEmail2" placeholder="Reply Your Thoughts" required="">\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- [ email-right section ] start --\x3e\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>',styles:[""]})],v);var u=s("VITL"),b=s("V22Z"),h=s("3Pt+"),f=s("SxV6");s("eLdt");let y=class{constructor(t,e,s,a,i,n,l,o,r){this.formBuilder=t,this.route=e,this.router=s,this.dataService=a,this.teamService=i,this.userService=n,this.constants=l,this.functions=o,this.toastr=r,this.pk="notificationID",this.title="Compose",this.objects="Messages",this.object="Compose",this.parentUrl="/messages/inbox",this.loading=!1,this.errorMessage="",this.submitted=!1,this.inboxCount=0,this.messageFolderType=null,this.autocompleteArray=[],this.autocompleteField="name",this.autocompleteModel=null,this.recipients=[],this.isCollapsed=!1}ngOnInit(){this.form=this.formBuilder.group({messageTitle:[""],messageBody:["",h.j.required],email:[null,[h.j.email]],cc:[],bcc:[],phoneNo:[null,[h.j.minLength(12),h.j.maxLength(12)]],messageType:["sms"],messageFolderType:["DF"]}),this.userService.getAll().subscribe(t=>{for(let e of t){let t=e.fullName+" - "+e.phoneNo;this.autocompleteArray.push(Object.assign(e,{id:e.id,name:t}))}}),this.dataService.count({messageFolderType:this.messageFolderType}).subscribe(t=>{this.inboxCount=t.count})}onSubmit(t=!1){if("email"===this.form.get("messageType").value&&this.form.patchValue({messageBody:this.messageBody}),this.submitted=!0,this.form.invalid)return void this.toastr.error(r.a.Messages.FORM_ERROR_FOUND,r.a.Title.FORM_VALIDATION);this.loading=!0;let e="sms"===this.form.get("messageType").value?this.form.get("phoneNo").value:this.form.get("email").value,s=this.form.value;if("inline"==s.messageType){0==this.recipients.length&&this.toastr.error(r.a.Messages.RECIPIENTS_MISSING,r.a.Title.FORM_VALIDATION);for(let t of this.recipients)e=t.phoneNo||t.email,Object.assign(s,{recipient:e,userID:t.id}),this.send(s,!1);this.router.navigate([this.parentUrl])}else s.recipient=e,this.send(s)}send(t,e=!0){("inline"==t.messageType?this.dataService.create(t):this.dataService.send(t)).pipe(Object(f.a)()).subscribe(()=>{this.toastr.success(r.a.Messages.SEND_SUCCESS,r.a.Title.NOTIFICATION_SEND),e&&this.router.navigate([this.parentUrl])},t=>{this.errorMessage=t.message?t.message:r.a.Messages.SEND_FAILURE,this.toastr.error(this.errorMessage,r.a.Title.NOTIFICATION_SEND)}).add(()=>{this.loading=!1})}onUserChange(t){0==this.recipients.filter(e=>e.id==t.id).length&&this.recipients.push(t),this.autocomplete.clear(),this.autocomplete.focus()}get f(){return this.form.controls}};y.ctorParameters=()=>[{type:h.b},{type:p.a},{type:p.f},{type:d.a},{type:b.a},{type:u.a},{type:r.a},{type:c.a},{type:m.b}],y.propDecorators={autocomplete:[{type:n.ViewChild,args:["autocomplete"]}]},y=Object(a.c)([Object(n.Component)({selector:"compose-message",template:'<app-basic-crumb [title]="title" [objects]="objects" [url]="parentUrl"></app-basic-crumb>\n<div class="row btn-page">\n  <div class="col-sm-12">\n    <div class="card email-card">\n      <div class="card-body">\n        <div class="mail-body">\n          <div class="row">\n            \x3c!-- [ email-left section ] start --\x3e\n            <div class="col-xl-2 col-md-3">\n              <ul class="mb-2 nav nav-tab flex-column nav-pills">\n                <li class="nav-item mail-section" *ngFor="let b of constants.messageFolderType">\n                  <a class="nav-link text-left" [routerLink]="[\'/messages/inbox\']" \n                  \t[ngClass]="{\'active\':(b.value==messageFolderType)}" \n                  \t[queryParams]="{messageFolderType:b.value}">\n                    <span><i class="{{b.icon}}"></i>{{b.name}}</span>\n                    <span class="float-right" *ngIf="b.value==\'IB\'">\n                    \t{{inboxCount}}\n                    </span>\n                  </a>\n                </li>\n              </ul>\n            </div>\n            \x3c!-- [ email-left section ] end --\x3e\n            \x3c!-- [ email-right section ] start --\x3e\n            <div class="col-xl-10 col-md-9">\n              <div class="tab-content" id="v-pills-tabContent">\n                <div class="mail-body-content">\n                  <form class="form-material" [formGroup]="form" (ngSubmit)="onSubmit()">\n                  \t<div class="form-group">\n                      <div class="row">\n                      \t<div class="col-md-6">\n\t\t\t\t\t      <label>Notification Type</label>\n\t\t\t\t\t      <select formControlName="messageType" class="form-control"  [ngClass]="{ \'is-invalid\': submitted && f.messageType.errors }">\n\t\t\t\t\t        <option *ngFor="let notification of constants.notificationType" value="{{notification.value}}">{{notification.name}}</option>\n\t\t\t\t\t      </select>\n\t\t\t\t\t      <div *ngIf="submitted && f.messageType.errors" class="invalid-feedback">\n\t\t\t\t\t        <div *ngIf="f.messageType.errors.required">Message type is required</div>\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div class="col-md-6" *ngIf="form.get(\'messageType\').value === \'inline\'">\n\t\t\t\t\t    \t<label>Search Recipients Below</label>\n\t\t\t\t\t    \t<ng-autocomplete \n\t\t\t\t\t\t\t  #autocomplete\n\t\t\t\t\t\t\t  [data]="autocompleteArray"\n\t\t\t\t\t\t\t  placeholder="Search recipients by their names"\n\t\t\t\t\t\t\t  [searchKeyword]="autocompleteField"\n\t\t\t\t\t\t\t  (selected)=\'onUserChange($event)\'\n\t\t\t\t\t\t\t  [ngModel] = \'autocompleteModel\'\n\t\t\t\t\t\t\t  [ngModelOptions]=\'{standalone: true}\'\n\t\t\t\t\t\t\t  [itemTemplate]="itemTemplate"\n\t\t\t\t\t\t\t  [notFoundTemplate]="notFoundTemplate">                                 \n\t\t\t\t\t\t\t</ng-autocomplete>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<ng-template #itemTemplate let-item>\n\t\t\t\t\t\t\t\t<a [innerHTML]="item.name"></a>\n\t\t\t\t\t\t\t</ng-template>\t\t\t\t\t\t\n\t\t\t\t\t\t\t<ng-template #notFoundTemplate let-notFound>\n\t\t\t\t\t\t\t\t<div [innerHTML]="notFound"></div>\n\t\t\t\t\t\t\t</ng-template>\n\t\t\t\t\t    </div>\n\t\t\t\t\t    <div class="col-md-12" *ngIf="form.get(\'messageType\').value === \'inline\'">\n\t\t\t\t\t    \t<span *ngFor="let r of recipients">&lt;&lt;{{r.name}}&gt;&gt;</span>\n\t\t\t\t\t    </div>\n                        <div class="col-md-6" *ngIf="form.get(\'messageType\').value === \'email\'">\n\t\t                    <label for="email">To</label>\n\t\t                    <input type="text" class="form-control" formControlName="email" id="email" placeholder="Enter email">\n\t\t                    <div *ngIf="submitted && f.email.errors" class="invalid-feedback">\n\t\t\t\t\t\t        <div *ngIf="f.email.errors.required">Email is required</div>\n\t\t\t\t\t\t        <div *ngIf="f.email.errors.email">Email must be a valid email address</div>\n\t\t\t\t\t\t    </div>\n\t\t                </div>\n\t\t                <div class="col-md-6" *ngIf="form.get(\'messageType\').value === \'sms\'">\n\t\t                    <label for="email">To</label>\n\t\t                    <input class="form-control" placeholder="e.g. +254 000 000 000" formControlName="phoneNo"\n\t\t\t\t\t\t      type="text" [ngClass]="{\'is-invalid\': submitted && f.phoneNo.errors}" mask="(+000) 000-000000">\n\t\t\t\t\t\t    <div *ngIf="submitted && f.phoneNo.errors" class="invalid-feedback">\n\t\t\t\t\t\t        <div *ngIf="f.phoneNo.errors.required">Phone number is required</div>\n\t\t\t\t\t\t        <div *ngIf="f.phoneNo.errors.minlength">Must be equal to 12 character(s)</div>\n\t\t\t\t\t\t        <div *ngIf="f.phoneNo.errors.maxlength">Must be equal to 12 character(s)</div>\n\t\t\t\t\t\t        <div *ngIf="f.phoneNo.errors.pattern">Incorrect! use format e.g. (+000) 000-000000</div>\n\t\t\t\t\t\t    </div>\n\t\t                </div>\n\t\t              </div>\n\t\t            </div>\n                    <div class="form-group" *ngIf="form.get(\'messageType\').value === \'email\'">\n                      <div class="row">\n                        <div class="col-md-6">\n                          <div class="form-group">\n                            <label for="cc">Cc</label>\n                            <input type="text" class="form-control"  formControlName="cc" id="cc" placeholder="Enter email">\n                          </div>\n                        </div>\n                        <div class="col-md-6">\n                          <div class="form-group">\n                            <label for="bcc">Bcc</label>\n                            <input type="text" class="form-control" formControlName="bcc"  id="bcc" placeholder="Enter email">\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class="form-group" *ngIf="form.get(\'messageType\').value === \'email\'">\n                      <label for="messageTitle">Subject</label>\n                      <input type="text" class="form-control" formControlName="messageTitle" id="messageTitle"  \n                      \tplaceholder="Subject" [ngClass]="{ \'is-invalid\': submitted && f.messageTitle.errors }">\n                      <div *ngIf="submitted && f.messageTitle.errors" class="invalid-feedback">\n\t\t\t\t        <div *ngIf="f.messageTitle.errors.required">Email Subject is required</div>\n\t\t\t\t      </div>\n                    </div>\n                    <div  *ngIf="form.get(\'messageType\').value !== \'sms\'">\n\t                    <app-tinymce [(ngModel)]=\'messageBody\' #tinymce=\'tinymce\' [ngModelOptions]="{standalone: true}"></app-tinymce>                    \n\t                    <div *ngIf="submitted" class="invalid-feedback">\n\t\t\t\t        \t<div *ngIf="!messageBody">Email Body is required</div>\n\t\t\t\t      \t</div>\n\t\t\t      \t</div>\n                    <div class="form-row" *ngIf="form.get(\'messageType\').value === \'sms\'">\n\t\t\t\t\t    <div class="form-group col-12" >\n\t\t\t\t\t      <label>SMS Message</label>\n\t\t\t\t\t      <textarea formControlName="messageBody" class="form-control" [rows]="5"\n\t\t\t\t\t             [ngClass]="{ \'is-invalid\': submitted && f.messageBody.errors }">\n\t\t\t\t\t      </textarea>\n\t\t\t\t\t      <label>{{messageBody? messageBody.length : 0}} character(s)</label>\n\t\t\t\t\t      <div *ngIf="submitted && f.messageBody.errors" class="invalid-feedback">\n\t\t\t\t\t        <div *ngIf="f.messageBody.errors.required">Message is required</div>\n\t\t\t\t\t      </div>\n\t\t\t\t\t    </div>\n\t\t\t\t\t</div>\n                    <div class="float-right mt-3">\n                      <button type="button" class="btn waves-effect waves-light btn-secondary" (click)="onSubmit(true)">Save as draft</button>\n                      <button type="button" class="btn waves-effect waves-light btn-primary" (click)="onSubmit()">Send</button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            \x3c!-- [ email-right section ] end --\x3e\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>',styles:[""]})],y);var x=s("gG2O");const T=[{path:"",redirectTo:"inbox",pathMatch:"full"},{path:"inbox",component:g,canActivate:[x.a]},{path:"compose",component:y,canActivate:[x.a]},{path:"read/:id",component:v,canActivate:[x.a]}];let w=class{};w=Object(a.c)([Object(n.NgModule)({imports:[p.g.forChild(T)],exports:[p.g]})],w);var I=s("1kSV"),C=s("is2z");let k=class{};k=Object(a.c)([Object(n.NgModule)({declarations:[g,v,y],imports:[l.CommonModule,w,i.a,C.a,I.c,I.e]})],k)}}]);